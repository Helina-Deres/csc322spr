
// Import THREE
import * as THREE from 'https://threejsfundamentals.org/threejs/resources/threejs/r132/build/three.module.js';

// Import OrbitControls
import { OrbitControls } from 'https://cdn.jsdelivr.net/npm/three@0.121.1/examples/jsm/controls/OrbitControls.js';

// Create renderer
const renderer = new THREE.WebGLRenderer();
renderer.setSize(window.innerWidth, window.innerHeight);
document.body.appendChild(renderer.domElement);

// Create camera
const camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 1, 500);
camera.position.set(0, 0, 100);

// Create OrbitControls
const controls = new OrbitControls(camera, renderer.domElement);
controls.enableDamping = true; // Adds smooth motion
controls.dampingFactor = 0.05;
controls.screenSpacePanning = false;
controls.minDistance = 10;
controls.maxDistance = 200;

// Create scene
const scene = new THREE.Scene();

// Ellipse 1
const curve = new THREE.EllipseCurve(
	0,  0,            // ax, aY
	25, 15,           // xRadius, yRadius
	0,  2 * Math.PI,  // aStartAngle, aEndAngle
	false,            // aClockwise
	0                 // aRotation
);

const points = curve.getPoints( 50 );
const geometry = new THREE.BufferGeometry().setFromPoints( points );

const material = new THREE.LineBasicMaterial( { color: 0xff0000 } );

// Create the final object to add to the scene
const ellipse = new THREE.Line( geometry, material );
scene.add(ellipse); 

// Move the ellipses so that they look like the infinity symbol
ellipse.position.x = 20; 


// Ellipse 2
const curve2 = new THREE.EllipseCurve(
	0,  0,            // ax, aY
	25, 15,           // xRadius, yRadius
	0,  2 * Math.PI,  // aStartAngle, aEndAngle
	false,            // aClockwise
	0                 // aRotation
);

const points2 = curve2.getPoints( 50 );
const geometry2 = new THREE.BufferGeometry().setFromPoints( points2 );

const material2 = new THREE.LineBasicMaterial( { color: 0xff0000 } );

// Create the final object to add to the scene
const ellipse2 = new THREE.Line( geometry2, material2 );

scene.add(ellipse2); 

// Move the ellipses so that they look like the infinity symbol
ellipse2.position.x = -30; 


// Animation loop for rendering and controls update
function animate() {
  requestAnimationFrame(animate);
  controls.update();  // Required for damping to work
  renderer.render(scene, camera);
}

// Start the animation loop
animate();
